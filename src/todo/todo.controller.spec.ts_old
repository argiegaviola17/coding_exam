// import {
//   Test,
//   TestingModule,
// } from '@nestjs/testing';

// import { PaginationDTO } from './dto/pagination.dto';
// import { TodoController } from './todo.controller';
// import { TodoService } from './todo.service';

// const TODO_TEST_DATA = [
//     {
//         id: 1,
//         text: 'Todo 1'
//     },
//     {
//         id: 2,
//         text: 'Todo 2'
//     },
//     {
//         id: 3,
//         text: 'Todo 3'
//     },
//     {
//         id: 4,
//         text: 'Todo 4'
//     },
//     {
//         id: 5,
//         text: 'Todo 5'
//     },
//     {
//         id: 6,
//         text: 'Todo 6'
//     },
//     {
//         id: 7,
//         text: 'Todo 7'
//     },
//     {
//         id: 8,
//         text: 'Todo 8'
//     },
//     {
//         id: 9,
//         text: 'Todo 9'
//     },
//     {
//         id: 10,
//         text: 'Todo 10'
//     }
// ];
// describe('TodoController', () => {
    
//   let controller;
//   let service;

//   beforeEach(async () => {
//     const module: TestingModule = await Test.createTestingModule({
//       controllers: [TodoController],
//       providers: [
//         {
//           provide: TodoService,
//           useValue: {
//             read: jest.fn().mockResolvedValue(TODO_TEST_DATA),
//             // create: jest
//             //   .fn()
//             //   .mockImplementation((createCatDto: Creat) =>
//             //     Promise.resolve({ _id: '1', ...createCatDto }),
//             //   ),
//           },
//         },
//       ],
//     }).compile();

//     controller = module.get(TodoController);
//     service = module.get(TodoService);
//   });

//   it('should be defined', () => {
//     expect(controller).toBeDefined();
//   });

// //   describe('create()', () => {
// //     it('should create a new todo', async () => {
// //       const createTodoDto: CreateTodoDTO = {
// //         text: 'Create something',
// //       };

// //       expect(controller.create(createTodoDto)).resolves.toEqual({
// //         _id: '1',
// //         ...createTodoDto,
// //       });
// //     });
// //   });

//   describe('read()', () => {
//     it('should get an array of todo', () => {
//      const params: PaginationDTO = new PaginationDTO();
//      params.pageNumber = 1;
//      params.pageSize = 10;
//      expect(controller.read(params)).resolves.toEqual(TODO_TEST_DATA);
//     });
//   });


// });
